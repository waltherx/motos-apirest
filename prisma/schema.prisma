generator client {
  provider = "prisma-client-js"
}

model User {
  id         Int        @id @default(autoincrement())
  username   String     @unique
  realname   String?    @default("") @db.VarChar(250)
  password   String     @db.VarChar(2000)
  email      String     @unique
  phone      String?    @unique @default("")
  isAdmin    Boolean    @default(false)
  status     EstadoUser @default(ACTIVO)
  created_at DateTime   @default(now())
  update_at  DateTime?  @updatedAt
  role       Role       @relation(fields: [role_id], references: [id])
  role_id    Int
}

model Role {
  id          Int       @id @default(autoincrement())
  nombre      String    @unique @db.VarChar(20)
  descripcion String?   @default("")
  created_at  DateTime  @default(now())
  update_at   DateTime? @updatedAt
  users       User[]
}

model Client {
  id         Int       @id @default(autoincrement())
  ci         Int       @unique
  fullname   String    @db.VarChar(350)
  address    String?   @default("") @db.VarChar(250)
  phone      String?   @default("") @db.VarChar(20)
  avatar     String?   @default("") @db.VarChar(30)
  motos      Moto[]
  created_at DateTime  @default(now())
  update_at  DateTime? @updatedAt
}

model Moto {
  id            Int         @id @default(autoincrement())
  marca         String?     @default("") @db.VarChar(100)
  modelo        String      @db.VarChar(100)
  anio          Int?        @default(0)
  placa         String      @db.VarChar(15)
  motor         String?     @default("") @db.VarChar(10)
  color         String?     @default("") @db.VarChar(10)
  peso          Decimal?    @default(0) @db.Decimal(10, 2)
  kilometraje   Decimal?    @default(0) @db.Decimal(10, 2)
  estado        String?     @default("") @db.VarChar(50)
  fecha_compra  DateTime?
  precio_compra Decimal?    @default(0) @db.Decimal(10, 2)
  client        Client      @relation(fields: [client_id], references: [id])
  client_id     Int
  sucrusal_id   String?     @db.Uuid
  sucrusal      Sucrusal?   @relation(fields: [sucrusal_id], references: [id])
  dispositivo   MotoDispo[]
}

model Dispositivo {
  id        Int          @id @default(autoincrement())
  serial    String
  chipgsm   String       @db.VarChar(20)
  megas     DateTime?
  estado    EstadoDevice @default(DISPONIBLE)
  positions Position[]
  moto      MotoDispo[]
}

model MotoDispo {
  id             Int          @id @default(autoincrement())
  moto           Moto?        @relation(fields: [moto_id], references: [id])
  dispositivo    Dispositivo? @relation(fields: [dispositivo_id], references: [id])
  moto_id        Int?
  dispositivo_id Int?
  created_at     DateTime     @default(now())
  update_at      DateTime?    @updatedAt

  @@index([moto_id, dispositivo_id])
}

model Position {
  id             Int         @id @default(autoincrement())
  date           DateTime    @default(now())
  latitude       Decimal     @db.Decimal(9, 6)
  longitude      Decimal     @db.Decimal(9, 6)
  timestamp      Int?
  speed          Decimal?    @db.Decimal(8, 6)
  batt           Decimal?    @db.Decimal(8, 6)
  dispositivo    Dispositivo @relation(fields: [dispositivo_id], references: [id])
  dispositivo_id Int
}

model Alarma {
  id      String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  nombre  String       @db.VarChar(40)
  inicio  DateTime     @db.Time()
  fin     DateTime     @db.Time()
  devices String[]
  estado  EstadoAlarma @default(DESACTIVADA)
}

model Sucrusal {
  id        String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  nombre    String  @db.VarChar(120)
  direccion String  @db.VarChar(250)
  latitude  Decimal @db.Decimal(9, 6)
  longitude Decimal @db.Decimal(9, 6)
  motos     Moto[]
}

enum EstadoUser {
  ACTIVO
  INACTIVO
  BLOQUEADO
  PENDIENTE
  ELIMINADO
}

enum EstadoDevice {
  DISPONIBLE
  ENUSO
  MANTENIMIENTO
}

enum EstadoAlarma {
  ACTIVADA
  DESACTIVADA
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_LOCAL")
}
